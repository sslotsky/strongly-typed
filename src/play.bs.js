// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Pervasives from "bs-platform/lib/es6/pervasives.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Js_primitive from "bs-platform/lib/es6/js_primitive.js";
import * as Game$StronglyTyped from "./game.bs.js";
import * as Crash$StronglyTyped from "./crash.bs.js";
import * as Canvas$StronglyTyped from "./canvas.bs.js";

var component = ReasonReact.reducerComponent("Play");

var canvasHeight = 600.0 + 30.0 + 10.0;

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("canvas", {
                          ref: (function (node) {
                              return Curry._1(self[/* send */3], /* Ready */[(node == null) ? undefined : Js_primitive.some(node)]);
                            }),
                          height: Pervasives.string_of_float(canvasHeight),
                          width: Pervasives.string_of_float(1200.0)
                        });
            }),
          /* initialState */(function () {
              return /* record */[/* initialized */false];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              var canvas = action[0];
              var match = state[/* initialized */0];
              if (canvas !== undefined && !match) {
                var node = Js_primitive.valFromOption(canvas);
                return /* UpdateWithSideEffects */Block.__(2, [
                          /* record */[/* initialized */true],
                          (function () {
                              var initialState_003 = /* base : tuple */[
                                30.0,
                                1200.0 - 30.0
                              ];
                              var initialState_004 = /* crashCollector */Crash$StronglyTyped.crashSite(/* () */0);
                              var initialState = /* record */[
                                /* gameOver */false,
                                /* words : [] */0,
                                /* ticks */0,
                                initialState_003,
                                initialState_004,
                                /* bonus */undefined
                              ];
                              return Canvas$StronglyTyped.boot(node, 600.0, 1200.0, initialState, Game$StronglyTyped.nextState);
                            })
                        ]);
              } else {
                return /* NoUpdate */0;
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var height = 600.0;

var width = 1200.0;

var baseMargin = 30.0;

export {
  component ,
  height ,
  width ,
  baseMargin ,
  canvasHeight ,
  make ,
  
}
/* component Not a pure module */
