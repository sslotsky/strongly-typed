// Generated by BUCKLESCRIPT VERSION 4.0.3, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as $$String from "bs-platform/lib/es6/string.js";
import * as Common$StronglyTyped from "./common.bs.js";

var canvas = document.getElementById("canvas");

var context = canvas.getContext("2d");

function initUi(height, width, fontSize) {
  var input = /* record */[/* contents */""];
  var clearInput = function () {
    input[0] = "";
    return /* () */0;
  };
  window.addEventListener("keypress", (function (e) {
          input[0] = input[0] + e.key;
          return /* () */0;
        }));
  return /* record */[
          /* height */height,
          /* width */width,
          /* fontSize */fontSize,
          /* input */(function () {
              return input[0];
            }),
          /* clearInput */clearInput,
          /* calculateWidth */(function (str) {
              return context.measureText(str).width;
            })
        ];
}

function paint(ui, state, nextState) {
  context.clearRect(0, 0, ui[/* width */1] | 0, ui[/* height */0] | 0);
  context.font = String(ui[/* fontSize */2]) + "px Arial";
  context.fillStyle = "black";
  context.fillRect(0.0, 0.0, ui[/* width */1], ui[/* height */0]);
  var newState = Curry._2(nextState, state, ui);
  List.iter((function (word) {
          var input = Curry._1(ui[/* input */3], /* () */0);
          var text = word[/* text */0];
          var match = Common$StronglyTyped.startsWith(input, word);
          var match$1 = input.length;
          var match$2 = text.length;
          var match$3 = match ? /* tuple */[
              input,
              $$String.sub(text, match$1, match$2 - match$1 | 0)
            ] : /* tuple */[
              "",
              word[/* text */0]
            ];
          var matching = match$3[0];
          var $$continue = word[/* x */1] + context.measureText(matching).width;
          context.fillStyle = "red";
          context.fillText(matching, word[/* x */1], word[/* y */2]);
          context.fillStyle = "blue";
          context.fillText(match$3[1], $$continue, word[/* y */2]);
          return /* () */0;
        }), newState[/* words */1]);
  var match = state[/* base */3];
  var baseLeft = match[0];
  context.fillStyle = "orange";
  context.fillRect(baseLeft, ui[/* height */0] - 5.0, match[1] - baseLeft, 5.0);
  context.fillStyle = "black";
  List.iter((function (site) {
          context.fillRect(site[/* left */0], ui[/* height */0] - 5.0, site[/* right */1] - site[/* left */0], 5.0);
          return /* () */0;
        }), Curry._1(state[/* crashCollector */4][/* sites */2], /* () */0));
  if (newState[/* gameOver */0]) {
    var text = "GAME OVER";
    context.font = "90px Arial";
    context.fillStyle = "purple";
    context.fillText(text, ui[/* width */1] / 2.0 - Curry._1(ui[/* calculateWidth */5], text) / 2.0, ui[/* height */0] / 2.0);
    return /* () */0;
  } else {
    window.requestAnimationFrame((function () {
            return paint(ui, state, nextState);
          }));
    return /* () */0;
  }
}

var baseHeight = 5.0;

export {
  canvas ,
  context ,
  initUi ,
  baseHeight ,
  paint ,
  
}
/* canvas Not a pure module */
